/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN CitiesActionsGenerated.js PLEASE EDIT ../CitiesActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import CitiesApi from "../../../api/CitiesApi";

let actionsFunction = {

  //CRUD METHODS

  // Create cities
  createCities: function(cities) {
    return function(dispatch) {
      return CitiesApi
        .createCities(cities)
        .then(cities => {
          dispatch(actionsFunction.createCitiesSuccess(cities));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createCitiesSuccess: function(cities) {
    return { type: types.CREATE_CITIES_SUCCESS, payload: cities };
  },


  // Delete cities
  deleteCities: function(id) {
    return function(dispatch) {
      return CitiesApi
        .deleteCities(id)
        .then(cities => {
          dispatch(actionsFunction.deleteCitiesSuccess(cities));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteCitiesSuccess: function(cities) {
    return { type: types.DELETE_CITIES_SUCCESS, payload: cities };
  },


  // Get cities
  loadCities: function(id) {
    return function(dispatch) {
      return CitiesApi
        .getOneCities(id)
        .then(cities => {
          dispatch(actionsFunction.loadCitiesSuccess(cities));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadCitiesSuccess: function(cities) {
    return { type: types.GET_CITIES_SUCCESS, payload: cities };
  },

  // Load  list
  loadCitiesList: function() {
    return function(dispatch) {
      return CitiesApi
        .getCitiesList()
        .then(list => {
          dispatch(actionsFunction.loadCitiesListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadCitiesListSuccess: function(list) {
    return { type: types.LIST_CITIES_SUCCESS, payload: list };
  },

	
  // Save cities
  saveCities: function(cities) {
    return function(dispatch) {
      return CitiesApi
        .saveCities(cities)
        .then(cities => {
          dispatch(actionsFunction.saveCitiesSuccess(cities));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveCitiesSuccess: function(cities) {
    return { type: types.UPDATE_CITIES_SUCCESS, payload: cities };
  },


};

export default actionsFunction;
